@charset "UTF-8";
.notice-mask {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2000;
  background-color: rgba(0, 0, 0, 0.5);
  filter: progid:DXImageTransform.Microsoft.Gradient(startColorstr=#50000000,endColorstr=#50000000);
  -webkit-animation: notice-mask-show .2s ease;
          animation: notice-mask-show .2s ease;
}

@-webkit-keyframes notice-mask-show {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes notice-mask-show {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.notice-mask.hiding {
  -webkit-animation-name: notice-mask-hide;
          animation-name: notice-mask-hide;
}

@-webkit-keyframes notice-mask-hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes notice-mask-hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.notice-mask.notice-loading-mask {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.notice-mask.notice-loading-mask .loading-text {
  display: block;
  text-align: center;
  color: #fff;
  padding-top: 1.2857142857rem;
  padding-top: 18px \0;
  font-size: 1.2857142857rem;
  font-size: 18px \0;
  overflow: hidden;
  -webkit-animation: loading-text 3s infinite alternate;
          animation: loading-text 3s infinite alternate;
}

@-webkit-keyframes loading-text {
  from {
    letter-spacing: 1px;
  }
  to {
    letter-spacing: 3px;
  }
}

@keyframes loading-text {
  from {
    letter-spacing: 1px;
  }
  to {
    letter-spacing: 3px;
  }
}

.notice-mask.notice-loading-mask .loading-icon {
  display: block;
  margin: 0 auto;
  width: 3.4285714286rem;
  width: 48px \0;
  height: 3.4285714286rem;
  height: 48px \0;
  background: url("../../../images/loading.gif") no-repeat center/cover;
  margin-top: 150px \0;
}

.notice-item {
  position: fixed;
  z-index: 2001;
  text-align: center;
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
  background: #e9e9e9;
  color: #fff;
  font-size: 1.1428571429rem;
  font-size: 16px \0;
  bottom: 1.2857142857rem;
  bottom: 18px \0;
  left: 50%;
  left: 35% \0;
  min-width: 30%;
  margin: 0 auto;
  padding: 0.7142857143rem 1.2857142857rem;
  padding: 10px 18px 10px 18px \0;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  -webkit-animation: notice-item-show .2s ease both;
          animation: notice-item-show .2s ease both;
}

@-webkit-keyframes notice-item-show {
  from {
    opacity: 0;
    -webkit-transform: translateX(-50%) translateY(50%);
            transform: translateX(-50%) translateY(50%);
  }
  to {
    opacity: 1;
    -webkit-transform: translateX(-50%) translateY(0);
            transform: translateX(-50%) translateY(0);
  }
}

@keyframes notice-item-show {
  from {
    opacity: 0;
    -webkit-transform: translateX(-50%) translateY(50%);
            transform: translateX(-50%) translateY(50%);
  }
  to {
    opacity: 1;
    -webkit-transform: translateX(-50%) translateY(0);
            transform: translateX(-50%) translateY(0);
  }
}

.notice-item.hiding {
  -webkit-animation-name: notice-item-hide;
          animation-name: notice-item-hide;
}

@-webkit-keyframes notice-item-hide {
  from {
    opacity: 1;
    -webkit-transform: translate(-50%, 0) scale(1, 1);
            transform: translate(-50%, 0) scale(1, 1);
  }
  to {
    opacity: 0;
    -webkit-transform: translate(-50%, -50%) scale(0.8, 0.8);
            transform: translate(-50%, -50%) scale(0.8, 0.8);
  }
}

@keyframes notice-item-hide {
  from {
    opacity: 1;
    -webkit-transform: translate(-50%, 0) scale(1, 1);
            transform: translate(-50%, 0) scale(1, 1);
  }
  to {
    opacity: 0;
    -webkit-transform: translate(-50%, -50%) scale(0.8, 0.8);
            transform: translate(-50%, -50%) scale(0.8, 0.8);
  }
}

.notice-item.notice-success {
  background: #4caf50;
}

.notice-item.notice-error {
  background: #f44336;
}

html {
  height: 100%;
  background: url("../images/bg.jpg") no-repeat fixed bottom;
}

html body {
  background: none;
  font-family: '微软雅黑';
}

p {
  margin-bottom: 5px;
}

a:hover {
  text-decoration: none;
}

.navbar {
  background: #333;
  color: #fff;
}

.navbar a, .navbar a:hover, .navbar a:active {
  color: #fff;
}

.navbar-header {
  line-height: 60px;
  height: 60px;
}

.navbar-header .logo-brand {
  display: inline-block;
  font-size: 20px;
}

.navbar-header .head-logo {
  display: inline-block;
  width: 40px;
  height: 40px;
  vertical-align: middle;
}

.navbar-header .user-block {
  float: right;
  display: inline-block;
  vertical-align: top;
}

.navbar-header .logout-btn {
  cursor: pointer;
}

.container {
  max-width: 960px \0;
}

.nav-inline {
  padding: 10px !important;
  margin-bottom: 20px !important;
}

.nav-inline li a {
  padding: 0 !important;
}

.nav-inline li.active a {
  color: #0a8;
}

.pagination {
  margin-top: 40px !important;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy5jc3MiLCJtb2R1bGVzL19ub3RpY2Uuc2NzcyIsIm1vZHVsZXMvX2RldmljZS5zY3NzIiwicHVibGljLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDR2pCO0VBQ0ksZ0JBQWdCO0VBQ2hCLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztFQUNULFVBQVU7RUFDVixjQUFjO0VBQ2QscUNBQXNCO0VBQ3RCLGtHQUFpRztFQUNqRyw2Q0FBcUM7VUFBckMscUNBQXFDO0NBK0R4Qzs7QUE3REc7RUFDSTtJQUNJLFdBQVc7R0RBcEI7RUNFSztJQUNJLFdBQVc7R0RBcEI7Q0FDRjs7QUNORztFQUNJO0lBQ0ksV0FBVztHREFwQjtFQ0VLO0lBQ0ksV0FBVztHREFwQjtDQUNGOztBQ2pCRDtFQXFCUSx5Q0FBaUM7VUFBakMsaUNBQWlDO0NBVXBDOztBQVJHO0VBQ0k7SUFDSSxXQUFXO0dEQ3hCO0VDQ1M7SUFDSSxXQUFXO0dEQ3hCO0NBQ0Y7O0FDUE87RUFDSTtJQUNJLFdBQVc7R0RDeEI7RUNDUztJQUNJLFdBQVc7R0RDeEI7Q0FDRjs7QUM5QkQ7RUFrQ1EscUJBQWM7RUFBZCxxQkFBYztFQUFkLGNBQWM7RUFDZCw2QkFBdUI7RUFBdkIsOEJBQXVCO01BQXZCLDJCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIseUJBQXdCO01BQXhCLHNCQUF3QjtVQUF4Qix3QkFBd0I7RUFDeEIsMEJBQW9CO01BQXBCLHVCQUFvQjtVQUFwQixvQkFBb0I7Q0FrQ3ZCOztBQXZFTDtFQXdDWSxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWiw2QkNrQks7RURqQkwscUJBQXFCO0VBQ3JCLDJCQ2dCSztFRGZMLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsc0RBQThDO1VBQTlDLDhDQUE4QztDQVVqRDs7QUFSRztFQUNJO0lBQ0ksb0JBQW9CO0dERXJDO0VDQWE7SUFDSSxvQkFBb0I7R0RFckM7Q0FDRjs7QUNSVztFQUNJO0lBQ0ksb0JBQW9CO0dERXJDO0VDQWE7SUFDSSxvQkFBb0I7R0RFckM7Q0FDRjs7QUMxREQ7RUE4RFksZUFBZTtFQUNmLGVBQWU7RUFDZix1QkNISztFRElMLGVBQWU7RUFDZix3QkNMSztFRE1MLGdCQUFnQjtFQUNoQixzRUFBZ0U7RUFDaEUscUJBQXFCO0NBQ3hCOztBQUlUO0VBQ0ksZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsdUNBQXdCO0VBQ3hCLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1osMkJDcEJhO0VEcUJiLG1CQUFtQjtFQUNuQix3QkN0QmE7RUR1QmIsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixhQUFhO0VBQ2IsZUFBZTtFQUNmLGVBQWU7RUFDZix5Q0M1QmE7RUQ2QmIsZ0NBQWdDO0VBQ2hDLG9DQUFxQjtNQUFyQixnQ0FBcUI7VUFBckIsNEJBQXFCO0VBQ3JCLGtEQUEwQztVQUExQywwQ0FBMEM7Q0FtQzdDOztBQWpDRztFQUNJO0lBQ0ksV0FBVztJQUNYLG9EQUFzQztZQUF0Qyw0Q0FBc0M7R0REL0M7RUNHSztJQUNJLFdBQVc7SUFDWCxrREFBc0M7WUFBdEMsMENBQXNDO0dERC9DO0NBQ0Y7O0FDUEc7RUFDSTtJQUNJLFdBQVc7SUFDWCxvREFBc0M7WUFBdEMsNENBQXNDO0dERC9DO0VDR0s7SUFDSSxXQUFXO0lBQ1gsa0RBQXNDO1lBQXRDLDBDQUFzQztHREQvQztDQUNGOztBQzNCRDtFQWdDUSx5Q0FBaUM7VUFBakMsaUNBQWlDO0NBWXBDOztBQVZHO0VBQ0k7SUFDSSxXQUFXO0lBQ1gsa0RBQW1DO1lBQW5DLDBDQUFtQztHREFoRDtFQ0VTO0lBQ0ksV0FBVztJQUNYLHlEQUFzQztZQUF0QyxpREFBc0M7R0RBbkQ7Q0FDRjs7QUNSTztFQUNJO0lBQ0ksV0FBVztJQUNYLGtEQUFtQztZQUFuQywwQ0FBbUM7R0RBaEQ7RUNFUztJQUNJLFdBQVc7SUFDWCx5REFBc0M7WUFBdEMsaURBQXNDO0dEQW5EO0NBQ0Y7O0FDMUNEO0VBK0NRLG9CQUFvQjtDQUN2Qjs7QUFoREw7RUFtRFEsb0JBQW9CO0NBQ3ZCOztBRS9ITDtFQUNFLGFBQWE7RUFDYiwyREFBMEQ7Q0FLM0Q7O0FBUEQ7RUFJSSxpQkFBaUI7RUFDakIsb0JBQWE7Q0FDZDs7QUFFSDtFQUNFLG1CQUFtQjtDQUNwQjs7QUFDRDtFQUNFLHNCQUFzQjtDQUN2Qjs7QUFFRDtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0NBSWI7O0FBTkQ7RUFJSSxZQUNEO0NBQUM7O0FBRUo7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtDQW1CZDs7QUFyQkQ7RUFJSSxzQkFBc0I7RUFDdEIsZ0JBQWdCO0NBQ2pCOztBQU5IO0VBUUksc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixhQUFhO0VBQ2IsdUJBQXVCO0NBQ3hCOztBQVpIO0VBY0ksYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixvQkFBb0I7Q0FDckI7O0FBakJIO0VBbUJJLGdCQUFnQjtDQUNqQjs7QUFFSDtFQUNFLG9CQUFvQjtDQUNyQjs7QUFDRDtFQUNFLHlCQUF5QjtFQUN6QiwrQkFBK0I7Q0FhaEM7O0FBZkQ7RUFPTSxzQkFBc0I7Q0FDdkI7O0FBUkw7RUFXUSxZQUFZO0NBQ2I7O0FBSVA7RUFDRSw0QkFBNEI7Q0FDN0IiLCJmaWxlIjoicHVibGljLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi5ub3RpY2UtbWFzayB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAyMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9IzUwMDAwMDAwLGVuZENvbG9yc3RyPSM1MDAwMDAwMCk7XG4gIGFuaW1hdGlvbjogbm90aWNlLW1hc2stc2hvdyAuMnMgZWFzZTtcbn1cblxuQGtleWZyYW1lcyBub3RpY2UtbWFzay1zaG93IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG4ubm90aWNlLW1hc2suaGlkaW5nIHtcbiAgYW5pbWF0aW9uLW5hbWU6IG5vdGljZS1tYXNrLWhpZGU7XG59XG5cbkBrZXlmcmFtZXMgbm90aWNlLW1hc2staGlkZSB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLm5vdGljZS1tYXNrLm5vdGljZS1sb2FkaW5nLW1hc2sge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm5vdGljZS1tYXNrLm5vdGljZS1sb2FkaW5nLW1hc2sgLmxvYWRpbmctdGV4dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nLXRvcDogMS4yODU3MTQyODU3cmVtO1xuICBwYWRkaW5nLXRvcDogMThweCBcXDA7XG4gIGZvbnQtc2l6ZTogMS4yODU3MTQyODU3cmVtO1xuICBmb250LXNpemU6IDE4cHggXFwwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBhbmltYXRpb246IGxvYWRpbmctdGV4dCAzcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG59XG5cbkBrZXlmcmFtZXMgbG9hZGluZy10ZXh0IHtcbiAgZnJvbSB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgfVxuICB0byB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDNweDtcbiAgfVxufVxuXG4ubm90aWNlLW1hc2subm90aWNlLWxvYWRpbmctbWFzayAubG9hZGluZy1pY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMy40Mjg1NzE0Mjg2cmVtO1xuICB3aWR0aDogNDhweCBcXDA7XG4gIGhlaWdodDogMy40Mjg1NzE0Mjg2cmVtO1xuICBoZWlnaHQ6IDQ4cHggXFwwO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi8uLi9pbWFnZXMvbG9hZGluZy5naWZcIikgbm8tcmVwZWF0IGNlbnRlci9jb3ZlcjtcbiAgbWFyZ2luLXRvcDogMTUwcHggXFwwO1xufVxuXG4ubm90aWNlLWl0ZW0ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDIwMDE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm94LXNoYWRvdzogMCAwIDNweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGJhY2tncm91bmQ6ICNlOWU5ZTk7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDEuMTQyODU3MTQyOXJlbTtcbiAgZm9udC1zaXplOiAxNnB4IFxcMDtcbiAgYm90dG9tOiAxLjI4NTcxNDI4NTdyZW07XG4gIGJvdHRvbTogMThweCBcXDA7XG4gIGxlZnQ6IDUwJTtcbiAgbGVmdDogMzUlIFxcMDtcbiAgbWluLXdpZHRoOiAzMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwLjcxNDI4NTcxNDNyZW0gMS4yODU3MTQyODU3cmVtO1xuICBwYWRkaW5nOiAxMHB4IDE4cHggMTBweCAxOHB4IFxcMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBhbmltYXRpb246IG5vdGljZS1pdGVtLXNob3cgLjJzIGVhc2UgYm90aDtcbn1cblxuQGtleWZyYW1lcyBub3RpY2UtaXRlbS1zaG93IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSg1MCUpO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5cbi5ub3RpY2UtaXRlbS5oaWRpbmcge1xuICBhbmltYXRpb24tbmFtZTogbm90aWNlLWl0ZW0taGlkZTtcbn1cblxuQGtleWZyYW1lcyBub3RpY2UtaXRlbS1oaWRlIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKSBzY2FsZSgxLCAxKTtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgwLjgsIDAuOCk7XG4gIH1cbn1cblxuLm5vdGljZS1pdGVtLm5vdGljZS1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZDogIzRjYWY1MDtcbn1cblxuLm5vdGljZS1pdGVtLm5vdGljZS1lcnJvciB7XG4gIGJhY2tncm91bmQ6ICNmNDQzMzY7XG59XG5cbmh0bWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9iZy5qcGdcIikgbm8tcmVwZWF0IGZpeGVkIGJvdHRvbTtcbn1cblxuaHRtbCBib2R5IHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgZm9udC1mYW1pbHk6ICflvq7ova/pm4Xpu5EnO1xufVxuXG5wIHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG5hOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubmF2YmFyIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5uYXZiYXIgYSwgLm5hdmJhciBhOmhvdmVyLCAubmF2YmFyIGE6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5uYXZiYXItaGVhZGVyIHtcbiAgbGluZS1oZWlnaHQ6IDYwcHg7XG4gIGhlaWdodDogNjBweDtcbn1cblxuLm5hdmJhci1oZWFkZXIgLmxvZ28tYnJhbmQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLm5hdmJhci1oZWFkZXIgLmhlYWQtbG9nbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLm5hdmJhci1oZWFkZXIgLnVzZXItYmxvY2sge1xuICBmbG9hdDogcmlnaHQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLm5hdmJhci1oZWFkZXIgLmxvZ291dC1idG4ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDk2MHB4IFxcMDtcbn1cblxuLm5hdi1pbmxpbmUge1xuICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1ib3R0b206IDIwcHggIWltcG9ydGFudDtcbn1cblxuLm5hdi1pbmxpbmUgbGkgYSB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbn1cblxuLm5hdi1pbmxpbmUgbGkuYWN0aXZlIGEge1xuICBjb2xvcjogIzBhODtcbn1cblxuLnBhZ2luYXRpb24ge1xuICBtYXJnaW4tdG9wOiA0MHB4ICFpbXBvcnRhbnQ7XG59XG4iLCJAaW1wb3J0IFwiLi92YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcIi4vZGV2aWNlXCI7XHJcblxyXG4ubm90aWNlLW1hc2t7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgei1pbmRleDogMjAwMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjUpO1xyXG4gICAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuR3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jNTAwMDAwMDAsZW5kQ29sb3JzdHI9IzUwMDAwMDAwKTtcclxuICAgIGFuaW1hdGlvbjogbm90aWNlLW1hc2stc2hvdyAuMnMgZWFzZTtcclxuXHJcbiAgICBAa2V5ZnJhbWVzIG5vdGljZS1tYXNrLXNob3d7XHJcbiAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5oaWRpbmd7XHJcbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IG5vdGljZS1tYXNrLWhpZGU7XHJcblxyXG4gICAgICAgIEBrZXlmcmFtZXMgbm90aWNlLW1hc2staGlkZXtcclxuICAgICAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5ub3RpY2UtbG9hZGluZy1tYXNre1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAubG9hZGluZy10ZXh0e1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IHJlbSgxOCk7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxOHB4IFxcMDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiByZW0oMTgpO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHggXFwwO1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICBhbmltYXRpb246IGxvYWRpbmctdGV4dCAzcyBpbmZpbml0ZSBhbHRlcm5hdGU7XHJcblxyXG4gICAgICAgICAgICBAa2V5ZnJhbWVzIGxvYWRpbmctdGV4dHtcclxuICAgICAgICAgICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0b3tcclxuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAubG9hZGluZy1pY29ue1xyXG4gICAgICAgICAgICAvL2JvcmRlci10b3AtY29sb3I6ICMwYWI7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6IHJlbSg0OCk7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0OHB4IFxcMDtcclxuICAgICAgICAgICAgaGVpZ2h0OiByZW0oNDgpO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ4cHggXFwwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uLy4uLy4uL2ltYWdlcy9sb2FkaW5nLmdpZicpIG5vLXJlcGVhdCAgY2VudGVyL2NvdmVyO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxNTBweCBcXDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ubm90aWNlLWl0ZW17XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAyMDAxO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDNweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZTllOWU5O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNik7XHJcbiAgICBmb250LXNpemU6IDE2cHggXFwwO1xyXG4gICAgYm90dG9tOiByZW0oMTgpO1xyXG4gICAgYm90dG9tOiAxOHB4IFxcMDtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIGxlZnQ6IDM1JSBcXDA7XHJcbiAgICBtaW4td2lkdGg6IDMwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogcmVtKDEwKSByZW0oMTgpO1xyXG4gICAgcGFkZGluZzogMTBweCAxOHB4IDEwcHggMThweCBcXDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICBhbmltYXRpb246IG5vdGljZS1pdGVtLXNob3cgLjJzIGVhc2UgYm90aDtcclxuXHJcbiAgICBAa2V5ZnJhbWVzIG5vdGljZS1pdGVtLXNob3d7XHJcbiAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDUwJSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuaGlkaW5ne1xyXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBub3RpY2UtaXRlbS1oaWRlO1xyXG5cclxuICAgICAgICBAa2V5ZnJhbWVzIG5vdGljZS1pdGVtLWhpZGV7XHJcbiAgICAgICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApIHNjYWxlKDEsIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSguOCwgLjgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYubm90aWNlLXN1Y2Nlc3N7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzRjYWY1MDtcclxuICAgIH1cclxuXHJcbiAgICAmLm5vdGljZS1lcnJvcntcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZjQ0MzM2O1xyXG4gICAgfVxyXG59XHJcbiIsIkBtaXhpbiBhbmRyb2lkLWJvZHkoKSB7XHJcbiAgICAkc2VsZWN0b3I6ICN7Jn07XHJcbiAgICBAYXQtcm9vdCB7XHJcbiAgICAgICAgaHRtbC5hbmRyb2lkLWJvZHkge1xyXG4gICAgICAgICAgICAjeyRzZWxlY3Rvcn0ge1xyXG4gICAgICAgICAgICAgICAgQGNvbnRlbnRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGlvcy1ib2R5IHtcclxuICAgICRzZWxlY3RvcjogI3smfTtcclxuICAgIEBhdC1yb290IHtcclxuICAgICAgICBodG1sLmlvcy1ib2R5IHtcclxuICAgICAgICAgICAgI3skc2VsZWN0b3J9IHtcclxuICAgICAgICAgICAgICAgIEBjb250ZW50XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiB3ZWl4aW4tYm9keSB7XHJcbiAgICAkc2VsZWN0b3I6ICN7Jn07XHJcbiAgICBAYXQtcm9vdCB7XHJcbiAgICAgICAgaHRtbC53ZWl4aW4tYm9keSB7XHJcbiAgICAgICAgICAgICN7JHNlbGVjdG9yfSB7XHJcbiAgICAgICAgICAgICAgICBAY29udGVudFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gYW5kcm9pZC12dW5pdCB7XHJcbiAgICAkc2VsZWN0b3I6ICN7Jn07XHJcbiAgICBAYXQtcm9vdCB7XHJcbiAgICAgICAgaHRtbC5hbmRyb2lkLXZ1bml0IHtcclxuICAgICAgICAgICAgI3skc2VsZWN0b3J9IHtcclxuICAgICAgICAgICAgICAgIEBjb250ZW50XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhbmRyb2lkLWZsZXgge1xyXG4gICAgJHNlbGVjdG9yOiAjeyZ9O1xyXG4gICAgQGF0LXJvb3Qge1xyXG4gICAgICAgIGh0bWwuYW5kcm9pZC1mbGV4IHtcclxuICAgICAgICAgICAgI3skc2VsZWN0b3J9IHtcclxuICAgICAgICAgICAgICAgIEBjb250ZW50XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBwZXJjZW50LWRldmljZS13aWR0aCgkbnVtKSB7XHJcbiAgICBAcmV0dXJuICRudW0gLyAkb3JpZ2luLXdpZHRoICogMTAwICsgJTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIGZvbnQtc2l6ZS1yZW0oJHNpemUpIHtcclxuICAgIEByZXR1cm4gJHNpemUvKCRmb250LWJhc2Utc2l6ZSoyKSArIHJlbTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIHJlbSgkc2l6ZSkge1xyXG4gICAgQHJldHVybiAkc2l6ZS8oJGZvbnQtYmFzZS1zaXplKSArIHJlbTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIGVtMTQoJHRhcmdldCwgJHNpemU6IDE0KSB7XHJcbiAgICBAcmV0dXJuICR0YXJnZXQgLyAkc2l6ZSArIGVtO1xyXG59XHJcblxyXG5AZnVuY3Rpb24gZW0yNCgkdGFyZ2V0LCAkc2l6ZTogMjQpIHtcclxuICAgIEByZXR1cm4gJHRhcmdldCAvICRzaXplICsgZW07XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBlbTI4KCR0YXJnZXQsICRzaXplOiAyOCkge1xyXG4gICAgQHJldHVybiAkdGFyZ2V0IC8gJHNpemUgKyBlbTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIGVtMzYoJHRhcmdldCwgJHNpemU6IDM2KSB7XHJcbiAgICBAcmV0dXJuICR0YXJnZXQgLyAkc2l6ZSArIGVtO1xyXG59XHJcblxyXG5AZnVuY3Rpb24gZW0oJHRhcmdldCwgJHNpemUpIHtcclxuICAgIEByZXR1cm4gJHRhcmdldCAvICRzaXplICsgZW07XHJcbn1cclxuXHJcbkBmdW5jdGlvbiB3aWR0aC1yZW0oJHdpZHRoKSB7XHJcbiAgICBAcmV0dXJuICR3aWR0aC8oJGZvbnQtYmFzZS1zaXplKjIpICsgcmVtO1xyXG59XHJcblxyXG5AZnVuY3Rpb24gaGVpZ2h0LXJlbSgkaGVpZ2h0KSB7XHJcbiAgICBAcmV0dXJuICRoZWlnaHQvKCRmb250LWJhc2Utc2l6ZSoyKSArIHJlbTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIHBlcmNlbnQoJG51bSkge1xyXG4gICAgQHJldHVybiAkbnVtICogMTAwO1xyXG59XHJcblxyXG5AZnVuY3Rpb24gcGVyY2VudC13aWR0aCgkbnVtKSB7XHJcbiAgICBAcmV0dXJuICRudW0gKiAxMDAgKyB2dztcclxufVxyXG5cclxuQGZ1bmN0aW9uIHBlcmNlbnQtaGVpZ2h0KCRudW0pIHtcclxuICAgIEByZXR1cm4gJG51bSAqIDEwMCArIHZoO1xyXG59XHJcblxyXG5AbWl4aW4gcHJvcGVydHktdncoJHBybywgJHZhbHVlKSB7XHJcbiAgICAjeyRwcm99OiBwZXJjZW50LXdpZHRoKCR2YWx1ZS8kb3JpZ2luLXdpZHRoKTtcclxuICAgIEBpbmNsdWRlIGFuZHJvaWQtdnVuaXQge1xyXG4gICAgICAgICN7JHByb306IHdpZHRoLXJlbSgkdmFsdWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuQG1peGluIHdpZHRoLXZ3KCR3aWR0aCkge1xyXG4gICAgd2lkdGg6IHBlcmNlbnQtd2lkdGgoJHdpZHRoLyRvcmlnaW4td2lkdGgpO1xyXG4gICAgQGluY2x1ZGUgYW5kcm9pZC12dW5pdCB7XHJcbiAgICAgICAgd2lkdGg6IHdpZHRoLXJlbSgkd2lkdGgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gaGVpZ2h0LXZ3KCRoZWlnaHQpIHtcclxuICAgIGhlaWdodDogcGVyY2VudC13aWR0aCgkaGVpZ2h0LyRvcmlnaW4td2lkdGgpO1xyXG4gICAgQGluY2x1ZGUgYW5kcm9pZC12dW5pdCB7XHJcbiAgICAgICAgaGVpZ2h0OiB3aWR0aC1yZW0oJGhlaWdodCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBoZWlnaHQtdmgoJGhlaWdodCkge1xyXG4gICAgaGVpZ2h0OiBwZXJjZW50LWhlaWdodCgkaGVpZ2h0LyRvcmlnaW4taGVpZ2h0KTtcclxuICAgIEBpbmNsdWRlIGFuZHJvaWQtdnVuaXQge1xyXG4gICAgICAgIGhlaWdodDogaGVpZ2h0LXJlbSgkaGVpZ2h0KTtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1pbi1oZWlnaHQtdncoJGhlaWdodCkge1xyXG4gICAgbWluLWhlaWdodDogcGVyY2VudC13aWR0aCgkaGVpZ2h0LyRvcmlnaW4td2lkdGgpO1xyXG4gICAgQGluY2x1ZGUgYW5kcm9pZC12dW5pdCB7XHJcbiAgICAgICAgbWluLWhlaWdodDogd2lkdGgtcmVtKCRoZWlnaHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gYmFja2dyb3VuZC1kZXZpY2UoJHNyYzIsICRzcmMzKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAkc3JjMjtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtaW1hZ2Utc2V0KFxyXG4gICAgICAgICRzcmMyIDJ4LFxyXG4gICAgICAgICRzcmMzIDN4XHJcbiAgICApO1xyXG59XHJcbiIsIkBpbXBvcnQgXCJsaWIvbWVkaWEtcXVlcmllc1wiO1xyXG5AaW1wb3J0IFwibW9kdWxlcy9ub3RpY2VcIjtcclxuaHRtbHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWFnZXMvYmcuanBnJykgbm8tcmVwZWF0IGZpeGVkIGJvdHRvbTtcclxuICBib2R5e1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgIGZvbnQtZmFtaWx5OiAn5b6u6L2v6ZuF6buRJztcclxuICB9XHJcbn1cclxucHtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuYTpob3ZlciB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4ubmF2YmFye1xyXG4gIGJhY2tncm91bmQ6ICMzMzM7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYSwgYTpob3ZlciwgYTphY3RpdmUge1xyXG4gICAgY29sb3I6ICNmZmZcclxuICB9XHJcbn1cclxuLm5hdmJhci1oZWFkZXIge1xyXG4gIGxpbmUtaGVpZ2h0OiA2MHB4O1xyXG4gIGhlaWdodDogNjBweDtcclxuICAubG9nby1icmFuZCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgfVxyXG4gIC5oZWFkLWxvZ28ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIH1cclxuICAudXNlci1ibG9jayB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIH1cclxuICAubG9nb3V0LWJ0bntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA5NjBweCBcXDA7XHJcbn1cclxuLm5hdi1pbmxpbmV7XHJcbiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHggIWltcG9ydGFudDtcclxuXHJcbiAgLy9iYWNrZ3JvdW5kOiA7XHJcbiAgbGl7XHJcbiAgICBhe1xyXG4gICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAmLmFjdGl2ZXtcclxuICAgICAgYXtcclxuICAgICAgICBjb2xvcjogIzBhODtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4ucGFnaW5hdGlvbntcclxuICBtYXJnaW4tdG9wOiA0MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */
